[gd_scene load_steps=8 format=2]

[ext_resource path="res://Test/screenshot.png" type="Texture" id=1]
[ext_resource path="res://Scripts/Mirror.gd" type="Script" id=2]
[ext_resource path="res://sprites/water.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// Gonkee's water shader for Godot 3 - full tutorial https://youtu.be/uhMAHpV_cDg
// If you use this shader, I would prefer if you gave credit to me and my channel

uniform vec4 blue_tint : hint_color;

uniform vec2 sprite_scale;
uniform float scale_x = 0.67;

float rand(vec2 coord){
	return fract(sin(dot(coord, vec2(12.9898, 78.233)))* 43758.5453123);
}

float noise(vec2 coord){
	vec2 i = floor(coord);
	vec2 f = fract(coord);

	// 4 corners of a rectangle surrounding our point
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));

	vec2 cubic = f * f * (3.0 - 2.0 * f);

	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

void fragment(){
	
	vec2 noisecoord1 = UV * sprite_scale * scale_x;
	vec2 noisecoord2 = UV * sprite_scale * scale_x + 4.0;
	
	vec2 motion1 = vec2(TIME * 0.3, TIME * -0.4);
	vec2 motion2 = vec2(TIME * 0.1, TIME * 0.5);
	
	vec2 distort1 = vec2(noise(noisecoord1 + motion1), noise(noisecoord2 + motion1)) - vec2(0.5);
	vec2 distort2 = vec2(noise(noisecoord1 + motion2), noise(noisecoord2 + motion2)) - vec2(0.5);
	
	vec2 distort_sum = (distort1 + distort2) / 60.0;
	
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV + distort_sum, 0.0);
	
	color = mix(color, blue_tint, 0.3);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	float near_top = (UV.y + distort_sum.y) / (0.2 / sprite_scale.y);
	near_top = clamp(near_top, 0.0, 1.0);
	near_top = 1.0 - near_top;
	
	color = mix(color, vec4(1.0), near_top);
	
	float edge_lower = 0.6;
	float edge_upper = edge_lower + 0.1;
	
	if(near_top > edge_lower){
		color.a = 0.0;
		
		if(near_top < edge_upper){
			color.a = (edge_upper - near_top) / (edge_upper - edge_lower);
		}
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/blue_tint = Color( 0.478431, 0.705882, 0.721569, 1 )
shader_param/sprite_scale = Vector2( 1, 0.233 )
shader_param/scale_x = 0.5

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 1 )
colors = PoolColorArray( 0.648438, 0.975281, 1, 1 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[node name="Water" type="Sprite"]
self_modulate = Color( 1, 1, 1, 0.501961 )
position = Vector2( 1174, 660 )
z_index = 4095
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0, 130, 960, 540 )
script = ExtResource( 2 )

[node name="Mirror5" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( -0.00012207, 0 )
z_index = 4096
texture = SubResource( 4 )
region_enabled = true
region_rect = Rect2( 0, 130, 960, 540 )

[node name="water" type="TextureRect" parent="."]
modulate = Color( 1, 1, 1, 0.25098 )
margin_left = -480.0
margin_top = -270.0
margin_right = 480.0
margin_bottom = 270.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 2

